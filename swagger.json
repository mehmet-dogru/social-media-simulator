{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": "Social Media Simulator"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "string",
            "description": "The first name of the user."
          },
          "lastName": {
            "type": "string",
            "example": "string",
            "description": "The last name of the user."
          },
          "email": {
            "type": "string",
            "example": "string@string.com",
            "description": "The email of the user."
          },
          "password": {
            "type": "string",
            "example": "string",
            "description": "The password of the user."
          },
          "profileImage": {
            "type": "string",
            "example": "default.png",
            "description": "The profile image of the user."
          },
          "following": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "The users that the user is following."
          },
          "followers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "The users who are following the user."
          },
          "sharedPosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Post"
            },
            "description": "The posts shared by the user."
          },
          "role": {
            "type": "string",
            "enum": ["ADMIN", "USER"],
            "description": "The role of the user.",
            "example": "USER"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the post.",
            "minLength": 1,
            "maxLength": 100
          },
          "content": {
            "type": "string",
            "description": "The content of the post.",
            "minLength": 1,
            "maxLength": 500
          },
          "imageUrl": {
            "type": "string",
            "description": "The URL of the post's image."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The creation date of the post in ISO 8601 format."
          },
          "author": {
            "type": "string",
            "description": "The ID of the user who authored the post."
          },
          "likes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the users who liked the post."
          },
          "retweets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the users who retweeted the post."
          }
        }
      }
    }
  },
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["User"],
        "summary": "Users register in the system",
        "description": "Users register",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "string"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "string"
                  },
                  "email": {
                    "type": "string",
                    "example": "string@string.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Abc123!"
                  },
                  "passwordConfirm": {
                    "type": "string",
                    "example": "Abc123!"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["ADMIN", "USER"],
                    "example": "user"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "users login in the system",
        "description": "users login with password and email",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "string"
                  },
                  "password": {
                    "example": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["User"],
        "description": "Get user profile information",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/profile/{userId}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["User"],
        "description": "Get user profile information by id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/{userId}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["User"],
        "description": "Update user profile information",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "string"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "string"
                  },
                  "email": {
                    "type": "string",
                    "example": "string@string.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["User"],
        "description": "Get all user profile information",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/update-profile-image": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["User"],
        "description": "Update user profile image",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profileImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/follow/{id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["User"],
        "description": "Follow a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to follow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/unfollow/{id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["User"],
        "description": "Unfollow a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to follow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Post"],
        "description": "Posts are listed for admin",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Post"],
        "description": "Post is create",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Post"],
        "description": "Post is update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/posts/like/{postId}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Post"],
        "description": "Like a post",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of the post to like",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/posts/unlike/{postId}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Post"],
        "description": "Unlike a post",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of the post to like",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/posts/feed": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Post"],
        "summary": "Get Posts",
        "description": "Posts from people followed",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/posts/retweet/{postId}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Post"],
        "description": "Re-share a post",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of the post to retweet",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}
